buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

//Google Cloud Messages
apply plugin: 'com.google.gms.google-services'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
    maven { url "https://jitpack.io" }
}

//https://www.thoughtworks.com/insights/blog/signing-open-source-android-apps-without-disclosing-passwords
def appSecrets = new Properties()
try {
    //Create your own app-secrets.properties file using app-secret.propertiesTEMPLATE"
    appSecrets.load(new FileInputStream(rootProject.file("app-secret.properties")))
} catch (Exception e) {
    //This is needed to avoid Build fail in public CI server without secrets file, eg. Circle CI, Travis CI
    appSecrets.load(new FileInputStream(rootProject.file("app-secret.propertiesTEMPLATE")))
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.greenlionsoft.pollution.madrid"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 5
        versionName "1.4"
    }

    signingConfigs {
        release {
            storeFile file(appSecrets.storeFile)
            storePassword appSecrets.storePassword
            keyAlias appSecrets.keyAlias
            keyPassword appSecrets.keyPassword
        }
    }



    buildTypes {

        //Two apps in a device can't define a custom permission with same name, so we use a manifest
        //place holder to be able to have Debug and Release apps installed in same device

        debug {
            resValue "string", "google_maps_v2_api_key", appSecrets.googleMapV2DebugKey
            resValue "string", "analytics_tracking_id", appSecrets.analyticsTrackingId
            resValue "string", "admob_id", appSecrets.admobId
            resValue "string", "pollution_end_point", appSecrets.pollutionEndPoint
            resValue "string", "facebook_app_id", appSecrets.facebookAppId
            manifestPlaceholders = [gcmPermissionPackage: "com.greenlionsoft.pollution.madrid.debug"];
            minifyEnabled false
            applicationIdSuffix = ".debug"
            versionNameSuffix = "-DEBUG"
        }

        release {
            resValue "string", "google_maps_v2_api_key", appSecrets.googleMapV2ReleaseKey
            resValue "string", "analytics_tracking_id", appSecrets.analyticsTrackingId
            resValue "string", "admob_id", appSecrets.admobId
            resValue "string", "pollution_end_point", appSecrets.pollutionEndPoint
            resValue "string", "facebook_app_id", appSecrets.facebookAppId
            manifestPlaceholders = [gcmPermissionPackage: "com.greenlionsoft.pollution.madrid"];
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def date = new Date();
            def formattedDate = date.format('yyyyMMdd_HHmm')
            output.outputFile = new File(output.outputFile.parent,
                    output.outputFile.name.replace(".apk", "_MadridPollution_VC" + defaultConfig.versionCode + "_" + defaultConfig.versionName + "_" + ".apk")
            )
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    lintOptions {
        //ButterKnife Required
        disable 'InvalidPackage'
        //Fixes bug in Release Mode requiring Google Play Services string translations
        disable 'MissingTranslation'
    }
}

dependencies {
    //Libs folder
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //Unit Tests
    testCompile 'junit:junit:4.12'

    //Android
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    //Services
    compile 'com.google.android.gms:play-services-maps:8.3.0'
    compile 'com.google.android.gms:play-services-analytics:8.3.0'
    compile 'com.google.android.gms:play-services-ads:8.3.0'
    compile 'com.google.android.gms:play-services-gcm:8.3.0'
    //ButterKnife
    compile 'com.jakewharton:butterknife:7.0.1'
    //Retrofit
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    //JodaTime
    compile 'joda-time:joda-time:2.9.1'
    //Ripple Effect
    compile 'com.balysv:material-ripple:1.0.2'
    //Gson JSON handling
    compile 'com.google.code.gson:gson:2.4'
    //FB SDK
    compile 'com.facebook.android:facebook-android-sdk:4.8.2'
    //Backwards compatible Material Dialogs
    compile('com.github.afollestad.material-dialogs:core:0.8.5.2@aar') {
        transitive = true
    }
    //Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    //Modules dependencies
    compile project(':presentation')
    compile project(':domain')
}